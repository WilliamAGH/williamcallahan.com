{
  "name": "william-callahan-dot-com",
  "type": "module",
  "private": true,
  "version": "0.0.9",
  "homepage": "https://williamcallahan.com",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/WilliamAGH/williamcallahan.com.git"
  },
  "bugs": {
    "url": "https://github.com/WilliamAGH/williamcallahan.com/issues"
  },
  "scripts": {
    "update-s3": "bun scripts/data-updater.ts",
    "scheduler": "bun lib/server/scheduler.ts",
    "submit-sitemap": "bun scripts/submit-sitemap.ts",
    "analyze": "NODE_OPTIONS='--max-old-space-size=4096' ANALYZE=true next build",
    "prefetch": "bun scripts/data-updater.ts --bookmarks --github --logos",
    "populate-data": "NODE_ENV=development bun scripts/validate-environment.ts && NODE_ENV=development bun scripts/data-updater.ts --bookmarks --github --logos",
    "postinstall": "bun scripts/init-csp-hashes.ts",
    "prebuild": "bun scripts/init-csp-hashes.ts",
    "postbuild": "bun scripts/generate-csp-hashes.ts",
    "dev": "bun scripts/init-csp-hashes.ts && bun run cleanCache && NODE_OPTIONS='--max-old-space-size=3072 --max-semi-space-size=64 --expose-gc' NODE_ENV=development next dev",
    "dev:update-data": "NODE_ENV=development bun scripts/validate-environment.ts && NODE_ENV=development bun scripts/data-updater.ts",
    "dev:with-data": "bun scripts/init-csp-hashes.ts && bun run populate-data && bun run cleanCache && NODE_OPTIONS='--max-old-space-size=3072 --max-semi-space-size=64 --expose-gc' NODE_ENV=development next dev",
    "dev:full": "bun scripts/init-csp-hashes.ts && bun run populate-data && bun run cleanCache && NODE_OPTIONS='--max-old-space-size=3072 --max-semi-space-size=64 --expose-gc' NODE_ENV=development next dev",
    "dev:turbo": "bun scripts/init-csp-hashes.ts && bun run cleanCache && NODE_OPTIONS='--max-old-space-size=3072 --max-semi-space-size=64 --expose-gc' NODE_ENV=development next dev --turbo",
    "dev:memory-debug": "bun scripts/init-csp-hashes.ts && bun run cleanCache && NODE_OPTIONS='--max-old-space-size=3072 --max-semi-space-size=64 --expose-gc --trace-gc' NODE_ENV=development next dev",
    "build": "NODE_ENV=production bun scripts/validate-environment.ts && bun run validate:build && NODE_ENV=production NODE_OPTIONS='--max-old-space-size=4096' next build",
    "build:only": "NODE_ENV=production bun scripts/validate-environment.ts && bun run check:file-size && NODE_ENV=production NODE_OPTIONS='--max-old-space-size=4096' next build",
    "build:full": "NODE_ENV=production bun scripts/validate-environment.ts && bun run validate:with-size && NODE_ENV=production NODE_OPTIONS='--max-old-space-size=4096' next build",
    "start": "NODE_OPTIONS='--max-old-space-size=3072 --max-semi-space-size=64 --expose-gc' node .next/standalone/server.js",
    "start:plain": "NODE_OPTIONS='--max-old-space-size=3072 --max-semi-space-size=64 --expose-gc' next start",
    "docker:build": "docker buildx build --platform=linux/amd64 --build-arg NODE_ENV=production --build-arg NEXT_TELEMETRY_DISABLED=1 --load -t williamcallahan-web:latest .",
    "docker:start": "docker run --platform=linux/amd64 -p 3010:3000 -e NODE_ENV=production -e NODE_OPTIONS='--max-old-space-size=3072 --max-semi-space-size=64 --expose-gc' williamcallahan-web:latest",
    "docker:prefetch": "docker run --platform=linux/amd64 -p 3010:3000 -e NODE_ENV=production -e CONTAINER=true williamcallahan-web:latest bun scripts/data-updater.ts --bookmarks --github --logos",
    "docker:populate-data": "docker run --platform=linux/amd64 -p 3010:3000 -e NODE_ENV=production -e CONTAINER=true williamcallahan-web:latest bun scripts/data-updater.ts --bookmarks --github --logos",
    "monitor:status": "bun lib/health/status-monitor.server.ts",
    "deploy:verify": "bun scripts/verify-deployment-readiness.ts",
    "deploy:verify:dev": "bun scripts/verify-deployment-readiness.ts development",
    "deploy:smoke-test": "bun scripts/smoke-test-production.ts",
    "lint": "bun run lint:ox && bun run lint:es",
    "lint:es": "eslint . --config eslint.config.ts --format stylish",
    "lint:es:ci": "eslint . --config eslint.config.ts --format stylish --max-warnings 0 || (echo '⚠️  Linting issues detected but build continues (warnings only)' && exit 0)",
    "lint:errors": "eslint . --config eslint.config.ts --quiet --format stylish",
    "lint:progress": "bun scripts/lint-progress.ts",
    "lint:css": "stylelint --fix 'app/**/*.css' 'styles/**/*.css'",
    "format": "prettier -w .",
    "format:check": "prettier -c .",
    "lint:ox": "bunx oxlint .",
    "lint:ox:typeaware": "bunx oxlint --type-aware .",
    "type-check": "NODE_OPTIONS='--max-old-space-size=4096' bunx tsc --noEmit",
    "type-check:tests": "NODE_OPTIONS='--max-old-space-size=4096' bunx tsc --noEmit --project __tests__/tsconfig.json",
    "check:file-size": "bash -c 'fail=0; for f in $(find . -type f \\( -name \"*.ts\" -o -name \"*.tsx\" \\) ! -name \"*.d.ts\" | grep -v \"node_modules/\" | grep -v \".next/\"); do lines=$(wc -l < \"$f\"); if [ $lines -gt 500 ]; then echo \"[File Size Warning] $f exceeds $lines lines (limit: 500)\"; fail=1; fi; done; if [ \"${STRICT:-0}\" = \"1\" ] && [ $fail -ne 0 ]; then echo \"[File Size Check] STRICT=1 and violations found — failing.\"; exit 1; fi; exit 0'",
    "validate": "bun run lint && bun run type-check && bun scripts/analyze-circular-deps.ts",
    "validate:with-size": "bun run check:file-size && bun run validate",
    "validate:build": "bun run lint:es:ci && bun run type-check && bun scripts/analyze-circular-deps.ts && bun run check:file-size",
    "validate:full": "bun run lint && bun run type-check && bun run format:check",
    "clean": "rm -rf .next out node_modules",
    "cleanCache": "rm -rf .next/cache",
    "test": "NODE_OPTIONS='--max-old-space-size=4096' jest --color --config=config/jest/config.ts",
    "test:watch": "NODE_OPTIONS='--max-old-space-size=4096' jest --color --watch --config=config/jest/config.ts",
    "test:coverage": "NODE_OPTIONS='--max-old-space-size=4096' jest --coverage --config=config/jest/config.ts",
    "test:ci": "NODE_OPTIONS='--max-old-space-size=4096' jest --ci --coverage --config=config/jest/config.ts",
    "test:leaks": "NODE_OPTIONS='--max-old-space-size=4096' jest --detectOpenHandles --config=config/jest/config.ts",
    "test:smoke": "NODE_OPTIONS='--max-old-space-size=4096' jest --testPathPatterns=smoke --config=config/jest/config.ts",
    "test:smoke:blog": "bun run test:smoke -- --testPathPatterns=blog",
    "test:smoke:pages": "bun run test:smoke -- --testPathPatterns=pages",
    "debug:list-s3": "bunx -p dotenv-cli dotenv -e .env -- bun scripts/debug-list-s3.ts",
    "reset:bookmarks": "bash -c '. ./.env; export NODE_ENV=production; export AWS_ACCESS_KEY_ID=\"${AWS_ACCESS_KEY_ID:-$S3_ACCESS_KEY_ID}\"; export AWS_SECRET_ACCESS_KEY=\"${AWS_SECRET_ACCESS_KEY:-$S3_SECRET_ACCESS_KEY}\"; export AWS_REGION=\"${AWS_REGION:-${S3_REGION:-us-east-1}}\"; ENDPOINT_ARGS=\"\"; if [ -n \"$S3_SERVER_URL\" ]; then ENDPOINT_ARGS=\"--endpoint-url $S3_SERVER_URL\"; fi; aws $ENDPOINT_ARGS --no-cli-pager --output json s3 rm s3://$S3_BUCKET/json/bookmarks/ --recursive --exclude \"*-dev*\" --exclude \"*-test*\" --include \"*\"; bun scripts/data-updater.ts --bookmarks --force'",
    "reset:bookmarks:dev": "bash -c '. ./.env; export NODE_ENV=development; export AWS_ACCESS_KEY_ID=\"${AWS_ACCESS_KEY_ID:-$S3_ACCESS_KEY_ID}\"; export AWS_SECRET_ACCESS_KEY=\"${AWS_SECRET_ACCESS_KEY:-$S3_SECRET_ACCESS_KEY}\"; export AWS_REGION=\"${AWS_REGION:-${S3_REGION:-us-east-1}}\"; ENDPOINT_ARGS=\"\"; if [ -n \"$S3_SERVER_URL\" ]; then ENDPOINT_ARGS=\"--endpoint-url $S3_SERVER_URL\"; fi; aws $ENDPOINT_ARGS --no-cli-pager --output json s3 rm s3://$S3_BUCKET/json/bookmarks/ --recursive --exclude \"*\" --include \"*-dev*\"; bun scripts/data-updater.ts --bookmarks --force'",
    "fix:s3-acl-public": "bash -c '. ./.env && bash scripts/fix-s3-acl-public.sh'",
    "fix:s3-acl-public:debug": "bash -c '. ./.env && DEBUG=1 bash scripts/fix-s3-acl-public.sh'",
    "prepare": "node .husky/install.mjs",
    "validate-opengraph": "bun scripts/validate-opengraph-clear-cache.ts",
    "regenerate-content": "bun scripts/data-updater.ts",
    "regenerate-content:bookmarks": "bun scripts/data-updater.ts --bookmarks",
    "regenerate-content:force": "bun scripts/data-updater.ts --bookmarks --force",
    "bookmarks:refresh:dev": "DEPLOYMENT_ENV=development bun scripts/data-updater.ts --bookmarks --force",
    "bookmarks:refresh:prod": "DEPLOYMENT_ENV=production bun scripts/data-updater.ts --bookmarks --force",
    "bookmarks:metadata:dev": "DEPLOYMENT_ENV=development bun scripts/data-updater.ts --bookmarks --metadata-only",
    "bookmarks:metadata:prod": "DEPLOYMENT_ENV=production bun scripts/data-updater.ts --bookmarks --metadata-only",
    "reset-s3-json": "bun scripts/reset-and-regenerate-s3-json.ts",
    "reset-s3-json:execute": "bun scripts/reset-and-regenerate-s3-json.ts --execute",
    "reset-s3-json:force": "bun scripts/reset-and-regenerate-s3-json.ts --execute --force",
    "reset-s3-json:verbose": "bun scripts/reset-and-regenerate-s3-json.ts --execute --verbose",
    "reset-s3-json:no-backup": "bun scripts/reset-and-regenerate-s3-json.ts --execute --no-backup",
    "postdeploy": "bun run validate-opengraph"
  },
  "dependencies": {
    "@aws-sdk/client-s3": "3.896.0",
    "@aws-sdk/lib-storage": "3.896.0",
    "@fontsource/ibm-plex-mono": "5.2.7",
    "@mapbox/rehype-prism": "^0.9.0",
    "@mdx-js/mdx": "^3.1.1",
    "@octokit/graphql": "^8.2.2",
    "@opentelemetry/api": "1.9.0",
    "@opentelemetry/instrumentation": "0.205.0",
    "@sentry/browser": "10.15.0",
    "@sentry/nextjs": "10.15.0",
    "@sentry/opentelemetry": "10.15.0",
    "@tailwindcss/typography": "0.5.19",
    "cheerio": "^1.1.2",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "date-fns": "^4.1.0",
    "file-type": "^21.0.0",
    "framer-motion": "12.23.22",
    "fuse.js": "^7.1.0",
    "gaxios": "7.1.2",
    "google-auth-library": "10.3.0",
    "gray-matter": "^4.0.3",
    "hoist-non-react-statics": "^3.3.2",
    "image-js": "^0.37.0",
    "import-in-the-middle": "1.14.4",
    "lucide-react": "0.525.0",
    "mdast-util-mdx-jsx": "^3.2.0",
    "minisearch": "^7.2.0",
    "next": "15.5.1-canary.39",
    "next-mdx-remote": "4.4.1",
    "next-themes": "^0.4.6",
    "node-cron": "4.2.0",
    "prismjs": "^1.30.0",
    "react": "19.1.1",
    "react-activity-calendar": "2.7.14",
    "react-dom": "19.1.1",
    "react-parallax-tilt": "1.7.299",
    "react-tweet": "^3.2.2",
    "rehype-prism": "^2.3.3",
    "rehype-raw": "^7.0.0",
    "remark-breaks": "^4.0.0",
    "remark-gfm": "^2.0.0",
    "remark-mdx": "^3.1.1",
    "require-in-the-middle": "^7.5.2",
    "schema-dts": "^1.1.5",
    "server-only": "^0.0.1",
    "swr": "2.3.3",
    "systeminformation": "5.27.10",
    "tailwind-merge": "^3.3.1",
    "tailwindcss-animate": "^1.0.7",
    "use-sync-external-store": "^1.5.0",
    "zod": "^3.25.76"
  },
  "devDependencies": {
    "@eslint/js": "9.36.0",
    "@happy-dom/global-registrator": "18.0.1",
    "@mdx-js/react": "3.1.1",
    "@next/eslint-plugin-next": "15.5.4",
    "@svgr/webpack": "^8.1.0",
    "@swc/core": "1.13.19",
    "@testing-library/jest-dom": "6.8.0",
    "@testing-library/react": "^16.3.0",
    "@types/jest": "^30.0.0",
    "@types/jsdom": "^21.1.7",
    "@types/node": "24.5.2",
    "@types/react": "19.1.14",
    "@types/react-dom": "19.1.9",
    "@types/systeminformation": "3.23.1",
    "@typescript-eslint/eslint-plugin": "8.44.1",
    "@typescript-eslint/parser": "8.44.1",
    "@typescript-eslint/typescript-estree": "8.44.1",
    "autoprefixer": "^10.4.21",
    "aws-sdk-client-mock": "^4.1.0",
    "bun-types": "1.2.22",
    "critters": "0.0.23",
    "dotenv": "17.0.0",
    "eslint": "9.30.0",
    "eslint-config-next": "15.5.4",
    "eslint-config-prettier": "10.1.8",
    "eslint-formatter-compact": "8.40.0",
    "eslint-plugin-jest": "^29.0.1",
    "eslint-plugin-mdx": "3.6.2",
    "eslint-plugin-oxlint": "1.17.0",
    "eslint-plugin-react": "7.37.5",
    "eslint-plugin-react-hooks": "^5.2.0",
    "globals": "16.4.0",
    "husky": "^9.1.7",
    "jest": "30.1.3",
    "jest-environment-jsdom": "30.1.2",
    "jest-extended": "^6.0.0",
    "jiti": "^2.6.0",
    "jsdom": "^26.1.0",
    "lint-staged": "16.1.2",
    "node-mocks-http": "^1.17.2",
    "oxlint": "1.17.0",
    "postcss": "^8.5.6",
    "postcss-preset-env": "10.2.4",
    "prettier": "^3.6.2",
    "rehype-autolink-headings": "^6.1.1",
    "rehype-slug": "^5.1.0",
    "remark-lint-link-title-style": "^4.0.1",
    "remark-lint-list-item-spacing": "^5.0.1",
    "remark-lint-maximum-heading-length": "^4.1.1",
    "remark-lint-maximum-line-length": "^4.1.1",
    "remark-lint-no-undefined-references": "^5.0.2",
    "remark-lint-unordered-list-marker-style": "^4.0.1",
    "remark-preset-lint-consistent": "^6.0.1",
    "remark-preset-lint-markdown-style-guide": "^6.0.1",
    "remark-preset-lint-recommended": "^7.0.1",
    "stylelint": "16.21.0",
    "stylelint-config-prettier": "^9.0.5",
    "stylelint-config-recommended": "^16.0.0",
    "stylelint-config-standard": "^38.0.0",
    "stylelint-config-tailwindcss": "^1.0.0",
    "tailwindcss": "^3.4.17",
    "ts-jest": "29.4.0",
    "ts-node": "^10.9.2",
    "typescript": "5.9.2",
    "typescript-eslint": "8.40.0"
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "oxlint --fix",
      "prettier -w"
    ],
    "*.{json,md,mdx,yml,yaml,css}": [
      "prettier -w"
    ]
  },
  "trustedDependencies": [
    "@sentry/cli",
    "@swc/core",
    "sharp",
    "unrs-resolver"
  ],
  "overrides": {
    "import-in-the-middle": "1.14.0"
  },
  "resolutions": {
    "ansi-styles": "4.3.0"
  },
  "packageManager": "bun@1.2.22"
}
